@page
@model IndexModel
@inject Services.AspNetCoreVersion AspNetCoreVersion
@{
    ViewData["Title"] = "Tag Helper Pack Samples";
}

<h1>Tag Helper Pack Samples</h1>
<p>A set of useful, and possibly opinionated, Tag Helpers for ASP.NET Core.</p>
<p>Supported on ASP.NET Core 3.1, 5.0, &amp; 6.0. Also supported on ASP.NET Core 2.1 when run on .NET Framework 4.7.1 or higher.</p>
<p class="text-muted">This site running on ASP.NET Core @AspNetCoreVersion.CurrentVersion on @AspNetCoreVersion.OperatingSystemName</p>

<h2>Installation &amp; Issues</h2>
<p>See installation instructions and file issues at <a href="https://github.com/DamianEdwards/TagHelperPack">GitHub</a>.</p>

<h2>Examples</h2>
<h3>Field Template, Data Annotation, &amp; Model Tag Helpers</h3>
<p>
    Use <code>&lt;<em>any-element</em> asp-display-for="..."&gt;</code> or <code>&lt;display for="..."&gt;</code> to render a model
    value using the relevant field display template.
</p>
<p>
    Use <code>&lt;<em>any-element</em> asp-editor-for="..."&gt;</code> or <code>&lt;editor for="..."&gt;</code> to render a model
    value using the relevant field editor template.
</p>
<p>
    Use <code>&lt;<em>any-element</em> asp-display-name-for="..."&gt;</code> or <code>&lt;display-name for="..."&gt;</code> to render a model
    property's display name using the relevant field display template.
</p>
<p>
    Use <code>&lt;label asp-for="..."&gt;</code> to include the model property's description in the <code>title</code>
    attribute.
</p>
<p>
    When using <code>&lt;display for="..." /&gt;</code> or <code>&lt;editor for="..." /&gt;</code>:
    <ul>
        <li>Use the <code>template-name</code> attribute to override the template used to render the model.</li>
        <li>Use the <code>html-field-name</code> attribute to override the HTML field name used to render the model.</li>
    </ul>
</p>
<p>
    When using <code>&lt;<em>any-element</em> asp-display-for="..."&gt;</code> or
    <code>&lt;<em>any-element</em> asp-editor-for="..."&gt;</code>:
    <ul>
        <li>Use the <code>asp-template-name</code> attribute to override the template used to render the model.</li>
        <li>Use the <code>asp-html-field-name</code> attribute to override the HTML field name used to render the model.</li>
    </ul>
</p>
<p>
    Use <code>&lt;datalist asp-list="..."&gt;</code> to render a <code>&lt;datalist&gt;</code> element containing <code>&lt;option&gt;</code> elements
    representing each of the values from the specified list. Set input elements to use the list using the <code>list</code> attribute,
    e.g. <code>&lt;input asp-for="..." list="countries" /&gt;&lt;datalist id="countries" asp-list="..."&gt;</code>
</p>
<h4>Example</h4>
<div class="panel panel-default">
    <div class="panel-body">
        <form method="post">
            <div class="form-group">
                <label asp-for="Customer.Id"></label>
                <p class="form-control-static" asp-display-for="Customer.Id"></p>
            </div>
            <div class="form-group">
                <label asp-for="Customer.FirstName"></label>
                <editor for="Customer.FirstName" />
                <span asp-validation-for="Customer.FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Customer.LastName"></label>
                <editor for="Customer.LastName" template-name="String2" />
                <span asp-validation-for="Customer.LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-display-name-for="Customer.LastName" for="CustomerLastName"></label>
                <editor for="Customer.LastName" html-field-name="CustomerLastName" />
                <span asp-validation-for="Customer.LastName" data-valmsg-for="CustomerLastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Customer.BirthDate"></label>
                <editor for="Customer.BirthDate" />
                <span asp-validation-for="Customer.BirthDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Customer.Country"></label>
                <input asp-for="Customer.Country" class="form-control" list="countries" />
                <datalist id="countries" asp-list="@Model.Countries">
                    <option value="GB" />
                </datalist>
                <span asp-validation-for="Customer.Country" class="text-danger"></span>
            </div>
            <table class="table table-bordered table-condensed">
                <caption>Customer Orders</caption>
                <thead>
                    <tr>
                        <th asp-display-name-for="Customer.Orders[0].PlacedOn"></th>
                        <th asp-display-name-for="Customer.Orders[0].Customer"></th>
                        <th asp-display-name-for="Customer.Orders[0].Total"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in Model.Customer.Orders)
                    {
                        <tr>
                            <td asp-display-for="@order.PlacedOn"></td>
                            <td asp-display-for="@order.Customer" asp-template-name="CustomerName"></td>
                            <td asp-display-for="@order.Total"></td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="form-group">
                <div class="text-danger" asp-validation-summary="All"></div>
                <button type="submit" class="btn btn-primary">Save</button>
            </div>
        </form>
    </div>
</div>
<h4>Source</h4>
<figure>
    <pre>&lt;form method="post"&gt;
    &lt;div class="form-group"&gt;
        &lt;label asp-for="Id"&gt;&lt;/label&gt;
        &lt;p class="form-control-static" asp-display-for="Id"&gt;&lt;/p&gt;
    &lt;/div&gt;
    &lt;div class="form-group"&gt;
        &lt;label asp-for="FirstName"&gt;&lt;/label&gt;
        <strong>&lt;editor for="FirstName" /&gt;</strong>
        &lt;span asp-validation-for="FirstName" class="text-danger"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;div class="form-group"&gt;
        &lt;label asp-for="LastName"&gt;&lt;/label&gt;
        <strong>&lt;editor for="LastName" template-name="String2" /&gt;</strong>
        &lt;span asp-validation-for="LastName" class="text-danger"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;div class="form-group"&gt;
        &lt;label <strong>asp-display-name-for="LastName"</strong> for="CustomerLastName"&gt;&lt;/label&gt;
        <strong>&lt;editor for="LastName" html-field-name="CustomerLastName" /&gt;</strong>
        &lt;span asp-validation-for="LastName" data-valmsg-for="CustomerLastName" class="text-danger"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;div class="form-group"&gt;
        &lt;label asp-for="BirthDate"&gt;&lt;/label&gt;
        <strong>&lt;editor for="BirthDate" /&gt;</strong>
        &lt;span asp-validation-for="BirthDate" class="text-danger"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;div class="form-group"&gt;
        &lt;label asp-for="Customer.Country"&gt;&lt;/label&gt;
        &lt;input asp-for="Customer.Country" class="form-control" list="countries" /&gt;
        &lt;datalist id="countries" <strong>asp-list="@@Models.Customer.Countries"</strong>&gt;&lt;option value="GB" /&gt;&lt;/datalist&gt;
        &lt;span asp-validation-for="Customer.Country" class="text-danger"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;table class="table table-bordered table-condensed"&gt;
        &lt;caption&gt;Customer Orders&lt;/caption&gt;
        &lt;thead&gt;
            &lt;tr&gt;
                &lt;th <strong>asp-display-name-for="Orders[0].PlacedOn"&gt;</strong>&lt;/th&gt;
                &lt;th <strong>asp-display-name-for="Orders[0].Customer"&gt;</strong>&lt;/th&gt;
                &lt;th <strong>asp-display-name-for="Orders[0].Total"&gt;</strong>&lt;/th&gt;
            &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody&gt;
            @@foreach (var order in Model.Orders)
            {
                &lt;tr&gt;
                    &lt;td <strong>asp-display-for="@@order.PlacedOn"&gt;</strong>&lt;/td&gt;
                    &lt;td <strong>asp-display-for="@@order.Customer" asp-template-name="CustomerName"&gt;</strong>&lt;/td&gt;
                    &lt;td <strong>asp-display-for="@@order.Total"&gt;</strong>&lt;/td&gt;
                &lt;/tr&gt;
            }
        &lt;/tbody&gt;
    &lt;/table&gt;
    &lt;div class="form-group"&gt;
        &lt;div class="text-danger" asp-validation-summary="ModelOnly"&gt;&lt;/div&gt;
        &lt;button type="submit" class="btn btn-primary"&gt;Save&lt;/button&gt;
    &lt;/div&gt;
&lt;/form&gt;</pre>
</figure>

<h3>Markdown Tag Helper</h3>
<p>
    Use <code>&lt;markdown&gt;</code> to render markdown in the page/view.
</p>
<h4>Example</h4>
<div class="panel panel-default">
    <div class="panel-body">
        <markdown allow-html="true">
            Greetings *Elizabeth*, from **markdown**!

            - This is a list
            - Of things you could do
            - With this Tag Helper

            <img src="/images/works-on-my-machine.png" alt="Works on my machine"/>
        </markdown>
    </div>
</div>
<h4>Source</h4>
<figure>
    <pre>&lt;markdown allow-html="true"&gt;
    Greetings *Elizabeth*, from **markdown**!

    - This is a list
    - Of things you could do
    - With this Tag Helper&lt;/markdown&gt;

    &lt;img src="/images/works-on-my-machine.png" alt="Works on my machine" /&gt;
&lt;/markdown&gt;</pre>
</figure>

<p>
    By default, indentation is normalized, which is why the previous example renders correctly. To turn off
    indentation normalization, set <code>preserve-indentation</code> to <code>true</code>. If you do so, you'll need
    to remove leading whitespace between the &lt;markdown&gt; tag and the content.
</p>

<h4>Source</h4>
<figure>
    <pre>&lt;markdown allow-html="true" preserve-indentation&gt;Greetings *Elizabeth*, from **markdown**!

- This is a list
- Of things you could do
- With this Tag Helper&lt;/markdown&gt;

&lt;img src="/images/works-on-my-machine.png" alt="Works on my machine" /&gt;</pre>
</figure>

<p>If you don't, you might end up with unexpected code blocks.</p>

<h4>Example</h4>
<div class="panel panel-default">
    <div class="panel-body">
        <markdown preserve-indentation>
            Greetings *Elizabeth*, from **markdown**!

            - This is a list
            - Of things you could do
            - With this Tag Helper
        </markdown>
    </div>
</div>
<h4>Source</h4>
<figure>
    <pre>&lt;markdown preserve-indentation&gt;
        Greetings *Elizabeth*, from **markdown**!

        - This is a list
        - Of things you could do
        - With this Tag Helper
&lt;/markdown&gt;</pre>
</figure>

<h3>Script Inlining Tag Helper</h3>
<p>
    Use <code>&lt;script src="..." asp-inline="true"&gt;</code> to inline the contents of the referenced JavaScript file in the
    element body.
</p>
<h4>Example</h4>
<div class="panel panel-default">
    <div class="panel-body">
        <div id="jsGreeting"></div>
        <script src="~/js/site.js" asp-inline="true"></script>
        <script>document.getElementById('jsGreeting').appendChild(document.createTextNode(getGreeting('Elizabeth')))</script>
    </div>
</div>
<h4>Source</h4>
<figure>
    <pre>&lt;script src="~/js/site.js" <strong>asp-inline="true"</strong>&gt;&lt;/script&gt;</pre>
</figure>

<h3>AuthZ Tag Helper</h3>
<p>
    Use <code>&lt;<em>any-element</em> asp-authz="true|false" asp-authz-policy="..."&gt;</code> to specify authoriziation requirements that
    must be satisified for this element to be rendered.
</p>
<h4>Example</h4>
<ul class="nav nav-pills">
    <li role="presentation"><a asp-route-auth="std" asp-authz="false">Log in as StandardUser</a></li>
    <li role="presentation"><a asp-route-auth="admin" asp-authz="false">Log in as AdminUser</a></li>
    <li role="presentation"><a asp-route-auth="" asp-authz>Log out</a></li>
</ul>
<div class="panel panel-default">
    <div class="panel-body">
        <div asp-authz>This will only render if the user is authenticated.</div>
        <div asp-authz="false">This will only render when the user is <strong>*not*</strong> authenticated.</div>
        <div asp-authz-policy="AdminPolicy">This will only render if the user is authenticated and authorized via the "AdminPolicy" policy.</div>
    </div>
</div>
<h4>Source</h4>
<figure>
    <pre>&lt;div asp-authz&gt;This will only render if the user is authenticated.&lt;/div&gt;
&lt;div asp-authz="false"&gt;This will only render when the user is &lt;strong&gt;*not*&lt;/strong&gt; authenticated.&lt;/div&gt;
&lt;div asp-authz-policy="AdminPolicy"&gt;This will only render if the user is authenticated and authorized via the "AdminPolicy" policy.&lt;/div&gt;</pre>
</figure>

<h3>If Tag Helper</h3>
<p>
    Use <code>&lt;<em>any-element</em> asp-if="..."&gt;</code> to condtionally suppress an element and its content when
    the provided expression is <code>false</code>.
</p>
<h4>Example</h4>
<div class="panel panel-default">
    <div class="panel-body">
        <div asp-if="(DateTime.UtcNow.Minute % 2) == 0">This paragraph will only render during <strong>even</strong> mintues.</div>
        <div asp-if="(DateTime.UtcNow.Minute % 2) == 1">This paragraph will only render during <strong>odd</strong> mintues.</div>
    </div>
</div>
<h4>Source</h4>
<figure>
    <pre>&lt;div <strong>asp-if="(DateTime.UtcNow.Minute % 2) == 0"</strong>&gt;This paragraph will only render during &lt;strong&gt;even&lt;/strong&gt; minutes.&lt;/div&gt;
&lt;div <strong>asp-if="(DateTime.UtcNow.Minute % 2) == 1"</strong>&gt;This paragraph will only render during &lt;strong&gt;odd&lt;/strong&gt; minutes.&lt;/div&gt;</pre>
</figure>

<h3>If combined with Partial</h3>
<p>
    Remember, you can compose certain Tag Helpers together on the same element, assuming they all apply to the specific element name.
</p>
<h4>Example</h4>
<div class="panel panel-default">
    <div class="panel-body">
        <partial name="_Even" asp-if="(DateTime.UtcNow.Minute % 2) == 0"/>
        <partial name="_Odd" asp-if="(DateTime.UtcNow.Minute % 2) != 0"/>
    </div>
</div>
<h4>Source</h4>
<figure>
    <pre>&lt;<strong>partial name="_Even" asp-if="(DateTime.UtcNow.Minute % 2) == 0"</strong> /&gt;
&lt;<strong>partial name="_Odd" asp-if="(DateTime.UtcNow.Minute % 2) != 0"</strong> /&gt;</pre>
</figure>

<h3>Description For Tag Helper</h3>
<p>
    Use <code>&lt;<em>any-element</em> asp-description-for="..."&gt;</code> to display the content of a Description
    from the
    <code>
        <em>DisplayAttribute</em>
    </code> instance decorating a
    <code>
        <em>Model</em>
    </code> property.
    Works on any <strong>empty HTML element</strong>.
</p>
<h4>Example</h4>
<div class="panel panel-default">
    <div class="panel-body">
        The Customer description is: <span asp-description-for="Customer"></span>
    </div>
</div>
<h4>Source</h4>
<h5>Razor Syntax</h5>
<figure>
    <pre>The Customer description is: <strong>&lt;span asp-description-for="Customer"&gt;&lt;span&gt;</strong></pre>
</figure>
<h5>C# Model</h5>
<figure>    
    <pre><code>
[BindProperty, 
 Display(Name="Customer", Description = "The Customer Name")]
public Customer Customer { get; set; }
    </code></pre>
</figure>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
