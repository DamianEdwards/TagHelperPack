name: Release

on:
  workflow_dispatch:
    inputs:
      runId:
        description: The run ID of the CI workflow to release NuGet artifacts from
        required: true
        type: string

env:
  PACKAGE_ID: TagHelperPack

jobs:
  push-package:
    name: Push packages to nuget.org from 
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          run_id: ${{ inputs.runId }}
          workflow_conclusion: success
          name: nupkg
      
      - name: Get package version into an environment variable
        run: |
          _filepath="$(find ./ship -iname $PACKAGE_ID.*.nupkg)"
          _filename="${_filepath##*/}"
          _pkgname="${_filename%.*}"
          _version="${_pkgname##$PACKAGE_ID.}"
          echo "PACKAGE_VERSION=${_version}" >> $GITHUB_ENV
      
      - name: Print package version
        run: echo "$PACKAGE_VERSION"

      - name: Verify package version doesn't exist
        run: |
          _packageId="$PACKAGE_ID"
          _packageVersion="$PACKAGE_VERSION"
          _packageIdLower="${_packageId,,}"
          _packageUrl="https://api.nuget.org/v3/registration5-semver1/${_packageIdLower}/${_packageVersion}.json"
          set +e
          _packageStatusCode=$(curl _packageUrl -o /dev/null -Isw '%{http_code}')
          set -e
          if [ $_packageStatusCode == "200" ];
          then
            echo "The package ${_packageId} with version ${_packageVersion} already exists on nuget.org"; exit 1
          else
            if [ $_packageStatusCode == "404" ];
              echo "Confirmed package ${_packageId} with version ${_packageVersion} does not already exist on nuget.org"
            else
              echo "Unexpected status code ${_packageStatusCode} received from nuget.org"; exit 1
            fi
          fi

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3

      - name: Add nuget.org source
        run: dotnet nuget add source --username ${{ secrets.NUGET_USERNAME }} --password ${{ secrets.NUGET_API_KEY }} --store-password-in-clear-text --name NUGET https://api.nuget.org

      - name: Push to GitHub Packages
        run: dotnet nuget push "${_filepath}" -s "NUGET"
